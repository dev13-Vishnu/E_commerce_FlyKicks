<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Evara Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/admin/assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/admin/assets/css/main.css" rel="stylesheet" type="text/css" />

    <style>

.top-selling-categories {
    background-color: #ffffff;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    padding: 20px;
    margin-bottom: 20px;
}

.top-selling-categories h2 {
    font-size: 1.5em;
    margin-bottom: 20px;
    color: #333;
}

.top-selling-categories ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.top-selling-categories li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 0;
    border-bottom: 1px solid #e0e0e0;
}

.top-selling-categories li:last-child {
    border-bottom: none;
}

.category-card {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    text-align: left;
    flex-grow: 1;
}

.category-card h3 {
    font-size: 1.2em;
    margin: 0 0 5px 0;
    color: #007bff;
}

.category-card p {
    font-size: 0.9em;
    margin: 0;
    color: #666;
}

.category-card h3:hover {
    text-decoration: underline;
}

.category-card {
    margin-right: 20px;
}



      

      .best-selling-products {
    margin: 20px 0;
}

.best-selling-products ul {
    list-style: none;
    padding: 0;
}

.best-selling-products li {
    display: inline-block;
    /* margin: 10px; */
}
.product-card {
    border: 1px solid #ddd;
    padding: 10px;
    width: 200px;
    text-align: center;
    border-radius: 10px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Ensure proper spacing */
    height: 410px; /* Set a fixed height for the card */
}

.product-card img {
    max-width: 100%;
    height: auto;
    border-radius: 10px;
}

.product-card h3 {
    font-size: 16px;
    margin: 10px 0;
    min-height: 40px; /* Set a minimum height for the product name */
}

.product-card p {
    font-size: 14px;
    color: #555;
    margin-bottom: 10px;
}


      .date-range-filter {
            margin-bottom: 20px;
        }
        .date-range-filter input[type="date"] {
            width: 150px; /* Adjust the width as needed */
            margin-right: 10px;
            margin-left: 10px;
        }
        .date-range-filter #filterDateRange {
            margin-right: 10px;
        }
        .date-range-filter .btn-create-report {
            padding: 5px 10px; /* Adjust padding to make button shorter */
            font-size: 14px; /* Adjust font size if needed */
        }
      .badge-soft-success {
    background-color: #28a745;
    color: #fff;
}

.badge-soft-warning {
    background-color: #ffc107;
    color: #fff;
}

.badge-soft-danger {
    background-color: #dc3545;
    color: #fff;
}
.date-range-filter {
  display: flex;
  align-items: center;
}

.date-range-filter .form-control {
  margin-right: 10px;
}

.date-range-filter .btn-primary {
  margin-left: 10px;
}



    </style></em>
</head>

<body>
    <div class="screen-overlay"></div>

    <%-include('./layouts/sidemenu.ejs') %>

    <main class="main-wrap">
      <%-include('./layouts/navbar.ejs') %>
      <section class="content-main">
        <div class="content-header">
          <div>
            <h2 class="content-title card-title">Dashboard</h2>
            <p>Whole data about your business here</p>
          </div>
          <!-- <div>
            <a href="#" class="btn btn-primary"
              ><i class="text-muted material-icons md-post_add"></i>Create
              report</a
            >
          </div> -->
        </div>
        <div class="row">
          <div class="col-lg-3">
              <div class="card card-body mb-4">
                  <article class="icontext">
                      <span class="icon icon-sm rounded-circle bg-primary-light">
                          <i class="text-primary material-icons md-monetization_on"></i>
                      </span>
                      <div class="text">
                          <h6 class="mb-1 card-title">Revenue</h6>
                          <span>₹<%= overallRevenue.toFixed(2) %></span>
                          <span class="text-sm"> Shipping fees are not included </span>
                      </div>
                  </article>
              </div>
          </div>
          <div class="col-lg-3">
              <div class="card card-body mb-4">
                  <article class="icontext">
                      <span class="icon icon-sm rounded-circle bg-success-light">
                          <i class="text-success material-icons md-local_shipping"></i>
                      </span>
                      <div class="text">
                          <h6 class="mb-1 card-title">Orders</h6>
                          <span><%= totalOrders %></span>
                          <span class="text-sm"> Excluding orders in transit </span>
                      </div>
                  </article>
              </div>
          </div>
          <div class="col-lg-3">
              <div class="card card-body mb-4">
                  <article class="icontext">
                      <span class="icon icon-sm rounded-circle bg-warning-light">
                          <i class="text-warning material-icons md-qr_code"></i>
                      </span>
                      <div class="text">
                          <h6 class="mb-1 card-title">Products</h6>
                          <span><%= totalProducts %></span>
                          <span class="text-sm"> In 19 Categories </span>
                      </div>
                  </article>
              </div>
          </div>
          <div class="col-lg-3">
              <div class="card card-body mb-4">
                  <article class="icontext">
                      <span class="icon icon-sm rounded-circle bg-info-light">
                          <i class="text-info material-icons md-shopping_basket"></i>
                      </span>
                      <div class="text">
                          <h6 class="mb-1 card-title">Monthly Earning</h6>
                          <span>₹<%= averageMonthlyEarning.toFixed(2) %></span>
                          <span class="text-sm"> Based in your local time. </span>
                      </div>
                  </article>
              </div>
          </div>
      </div>
      
        <div class="row">
          <div class=" col-lg-12">
            <div class="card mb-4">
              <article class="card-body">
                <h5 class="card-title">Sale statistics</h5>

                        <!-- Buttons for Preset Date Ranges -->
        <div class="mt-4 mb-4">
          <button id="last7DaysBtn" class="btn btn-primary mr-2">Last 7 Days</button>
          <button id="thisMonthBtn" class="btn btn-success mr-2">This Month</button>
          <button id="thisYearBtn" class="btn btn-info">This Year</button>
      </div>

          <!-- Sales Chart -->
          <canvas id="salesChart" width="800" height="400"></canvas>
          


              </article>
            </div>
          
          </div>
        
        </div>
        <div class="card mb-4">
          <div class="best-selling-products">
            <h2>Best-Selling Products</h2>
            <ul>
                <% bestSellingProducts.forEach(function(product) { %>
                    <li>
                        <div class="product-card">
                            <a href="#" class="img-wrap"> 
                                <img src="/<%= product.productImage.replace(/\\/g, '/') %>" alt="<%= product.productName %>">
                            </a>
                            <h3 class="text-brand"><%= product.productName %></h3>
                            <p>₹<%= product.productPrice %></p>
                            <p class="text-brand">Sold: <%= product.totalSold %> units</p>
                        </div>
                    </li>
                <% }); %>
            </ul>
        </div>
        

          
        </div>

        <div class="card mb-4">
          <div class="top-selling-categories">
            <h2>Top-Selling Categories</h2>
            <ul>
                <% topSellingCategories.forEach(function(category) { %>
                    <li>
                        <div class="category-card">
                            <h3><%= category.categoryName %></h3>
                            <p>Sold: <%= category.totalSold %> units</p>
                        </div>
                    </li>
                <% }); %>
            </ul>
          </div>
        </div>
        
        <div class="card mb-4">
          <header class="card-header">
            <h4 class="card-title">Latest orders</h4>
            <div class="row align-items-center">
              <!-- <div class="col-md-3 col-12 me-auto mb-md-0 mb-3">
                <div class="custom_select">
                  <select class="form-select select-nice">
                    <option selected>All Categories</option>
                    <option>Women's Clothing</option>
                    <option>Men's Clothing</option>
                    <option>Cellphones</option>
                    <option>Computer & Office</option>
                    <option>Consumer Electronics</option>
                    <option>Jewelry & Accessories</option>
                    <option>Home & Garden</option>
                    <option>Luggage & Bags</option>
                    <option>Shoes</option>
                    <option>Mother & Kids</option>
                  </select>
                </div>
              </div> -->
              <div class="date-range-filter d-flex align-items-center">
                <label class="text-brand" for="startDate">Start Date : </label>
                <input type="date" id="startDate" class="form-control">
                <label class="text-brand" for="endDate">End Date :</label>
                <input type="date" id="endDate" class="form-control">
                <button id="filterDateRange" class="btn btn-primary">Filter</button>
              
                  <a href="" id="createReport" class="btn btn-primary">
                    <i class="text-muted material-icons md-post_add">

                    </i>
                    Create report
                  </a>
                
              </div>
              
              <!-- <div class="col-md-2 col-6">
                <div class="custom_select">
                  <select class="form-select select-nice">
                    <option selected>Status</option>
                    <option>All</option>
                    <option>Paid</option>
                    <option>Chargeback</option>
                    <option>Refund</option>
                  </select>
                </div>
              </div> -->
            </div>
          </header>
          <div class="card-body">
            <div class="table-responsive">
              <div class="table-responsive">
                <table class="table align-middle table-nowrap mb-0">
                  <thead class="table-light">
                    <tr>
                      <!-- <th scope="col" class="text-center">
                        <div class="form-check align-middle">
                          <input
                            class="form-check-input"
                            type="checkbox"
                            id="transactionCheck01"
                          />
                          <label
                            class="form-check-label"
                            for="transactionCheck01"
                          ></label>
                        </div>
                      </th> -->
                      <th class="align-middle" scope="col">Order ID</th>
                      <th class="align-middle" scope="col">Billing Name</th>
                      <th class="align-middle" scope="col">Date</th>
                      <th class="align-middle" scope="col">Total</th>
                      <th class="align-middle" scope="col">Discount</th> New Discount Column
                      <th class="align-middle" scope="col">Payment Status</th>
                      <th class="align-middle" scope="col">Payment Method</th>
                      <th class="align-middle" scope="col">View Details</th>
                    </tr>
                  </thead>
                  <tbody id="ordersTableBody">
                    <% orders.forEach(order => {%>
                      <tr>
                      <!-- <td class="text-center">
                        <div class="form-check">
                          <input
                            class="form-check-input"
                            type="checkbox"
                            id="transactionCheck02"
                          />
                          <label
                            class="form-check-label"
                            for="transactionCheck02"
                          ></label>
                        </div>
                      </td> -->
                      <td><a href="#" class="fw-bold"><%= order.orderId %></a></td>
                      <td><%= order.userId.username %></td>
                      <td><%= order.orderDate.toDateString() %></td>
                      <td>₹<%=order.payableAmount %>/-</td>
                      <td>₹<%= order.discount %>/-</td> <!-- New Discount Value -->
                      <td>
                        <span class="badge badge-pill 
                        <% if(order.paymentStatus === 'Success') { %> badge-soft-success <% } %>
                        <% if(order.paymentStatus === 'Pending') { %> badge-soft-warning <% } %>
                        <% if(order.paymentStatus === 'Failed') { %> badge-soft-danger <% } %>"
                          ><%=order.paymentStatus %></span
                        >
                      </td>
                      <td>
                        <i
                          class="material-icons md-payment font-xxl text-muted mr-5"
                        ></i>
                        <%=order.paymentMethod %>
                      </td>
                      <td>
                        <a href="/admin/order-details?orderObjectId=<%= order._id %>" class="btn btn-xs"> View details</a>
                      </td>
                    </tr>
                  <%  }); %>
                  </tbody>
                </table>
              </div>
            </div>
            <!-- table-responsive end// -->
          </div>
        </div>
        
        <!-- pagination -->
        <div class="pagination-area mt-30 mb-50">
          <nav aria-label="Page navigation example">
              <ul class="pagination justify-content-start">
                  <% if (currentPage > 1) { %>
                      <li class="page-item">
                          <a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>">
                              <i class="material-icons md-chevron_left"></i>
                          </a>
                      </li>
                  <% } %>
                  <% for (let i = 1; i <= totalPages; i++) { %>
                      <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                          <a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
                      </li>
                  <% } %>
                  <% if (currentPage < totalPages) { %>
                      <li class="page-item">
                          <a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>">
                              <i class="material-icons md-chevron_right"></i>
                          </a>
                      </li>
                  <% } %>
              </ul>
          </nav>
        </div>
        
      
        
      </section>
      <!-- content-main end// -->
      <footer class="main-footer font-xs">
        <div class="row pb-30 pt-15">
          <div class="col-sm-6">
            <script>
              document.write(new Date().getFullYear());
            </script>
            ©, Evara - HTML Ecommerce Template .
          </div>
          <div class="col-sm-6">
            <div class="text-sm-end">All rights reserved</div>
          </div>
        </div>
      </footer>
    </main>
    <script src="/admin/assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/admin/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/admin/assets/js/vendors/select2.min.js"></script>
    <script src="/admin/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/admin/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="/admin/assets/js/vendors/chart.js"></script>
    <!-- Main Script -->
    <script src="/admin/assets/js/main.js" type="text/javascript"></script>
    <script
      src="/admin/assets/js/custom-chart.js"
      type="text/javascript"
    ></script>

    <!-- paginatiion -->
     <script>

document.addEventListener('DOMContentLoaded', () => {
    // Adjust the limit if necessary (default is 10)
    const limit = 10;
    let currentPage = 1; // To keep track of the current page

    // Example orders array (replace with actual data)
    const orders = [
        /* Array of order objects */
    ];

    // Function to render orders based on the current page and limit
    function renderOrders(orders) {
        // Calculate the start and end index for slicing the orders array
        const start = (currentPage - 1) * limit;
        const end = start + limit;

        // Slice the orders array to get the current page's orders
        const paginatedOrders = orders.slice(start, end);

        // Render the paginated orders (replace with your rendering logic)
        const ordersContainer = document.querySelector('#orders-container');
        ordersContainer.innerHTML = ''; // Clear the previous orders
        paginatedOrders.forEach(order => {
            const orderElement = document.createElement('div');
            orderElement.textContent = `Order ID: ${order.id}`; // Adjust based on your order structure
            ordersContainer.appendChild(orderElement);
        });

        // Update the pagination controls
        updatePaginationControls(orders.length);
    }

    // Function to update pagination controls
    function updatePaginationControls(totalOrdersPagination) {
        const totalPages = Math.ceil(totalOrdersPagination / limit);
        const paginationContainer = document.querySelector('#pagination-controls');
        paginationContainer.innerHTML = ''; // Clear previous pagination controls

        for (let i = 1; i <= totalPages; i++) {
            const pageButton = document.createElement('button');
            pageButton.textContent = i;
            pageButton.classList.add('page-button');
            if (i === currentPage) {
                pageButton.classList.add('active');
            }
            pageButton.addEventListener('click', () => {
                currentPage = i;
                renderOrders(orders);
            });
            paginationContainer.appendChild(pageButton);
        }
    }

    // Initial render of orders and pagination
    renderOrders(orders);
});


     </script>

    <!-- jsPDF -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.6.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

<!-- Include jsPDF AutoTable --> 
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.22/jspdf.plugin.autotable.min.js"></script>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Moment.js (for date formatting) -->
<script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/min/moment.min.js"></script>
<script>
  // Parse Data Passed from Backend
  const salesDataLast7Days = <%- salesDataLast7Days %>;
  const salesDataThisMonth = <%- salesDataThisMonth %>;
  const salesDataThisYear = <%- salesDataThisYear %>;
  const orders = <%- JSON.stringify(orders) %>;

  // Initialize Chart
  let salesChart;

  // Function to Prepare Data for Chart.js
  function prepareChartData(data, type) {
      let labels = [];
      let sales = [];

      if (type === 'year') {
          data.forEach(item => {
              labels.push(`${item._id.month}/${item._id.year}`);
              sales.push(item.totalSales);
          });
      } else {
          data.forEach(item => {
              labels.push(`${item._id.day}/${item._id.month}/${item._id.year}`);
              sales.push(item.totalSales);
          });
      }

      return { labels, sales };
  }

  // Function to Render Chart
  function renderChart(data, type) {
      const ctx = document.getElementById('salesChart').getContext('2d');
      const chartData = prepareChartData(data, type);

      if (salesChart) {
          salesChart.destroy();
      }

      salesChart = new Chart(ctx, {
          type: 'line',
          data: {
              labels: chartData.labels,
              datasets: [{
                  label: 'Total Sales',
                  data: chartData.sales,
                  backgroundColor: 'rgba(54, 162, 235, 0.2)',
                  borderColor: 'rgba(54, 162, 235, 1)',
                  borderWidth: 2,
                  fill: true,
                  tension: 0.3
              }]
          },
          options: {
              scales: {
                  x: {
                      display: true,
                      title: {
                          display: true,
                          text: 'Date'
                      }
                  },
                  y: {
                      display: true,
                      title: {
                          display: true,
                          text: 'Sales Amount (₹)'
                      },
                      beginAtZero: true
                  }
              },
              plugins: {
                  legend: {
                      display: true,
                      position: 'top'
                  },
                  tooltip: {
                      enabled: true
                  }
              }
          }
      });
  }

  // Event Listeners for Buttons
  document.getElementById('last7DaysBtn').addEventListener('click', () => {
      renderChart(salesDataLast7Days, 'day');
  });

  document.getElementById('thisMonthBtn').addEventListener('click', () => {
      renderChart(salesDataThisMonth, 'day');
  });

  document.getElementById('thisYearBtn').addEventListener('click', () => {
      renderChart(salesDataThisYear, 'year');
  });

  // Render Default Chart on Page Load (Last 7 Days)
  document.addEventListener('DOMContentLoaded', () => {
      renderChart(salesDataLast7Days, 'day');
      renderOrders(orders);
  });

  // Function to Render Orders
  function renderOrders(filteredOrders) {
      const tbody = document.getElementById('ordersTableBody');
      tbody.innerHTML = ''; // Clear existing rows
      filteredOrders.forEach(order => {
          const row = document.createElement('tr');
          row.innerHTML = `
              <td><a href="#" class="fw-bold">${order.orderId}</a></td>
              <td>${order.userId.username}</td>
              <td>${new Date(order.orderDate).toDateString()}</td>
              <td>₹${order.payableAmount}/-</td>
              <td>
                  <span class="badge badge-pill ${
                    order.paymentStatus === 'Success' ? 'badge-soft-success' :
                    order.paymentStatus === 'Pending' ? 'badge-soft-warning' :
                    order.paymentStatus === 'Failed' ? 'badge-soft-danger' : ''
                  }">${order.paymentStatus}</span>
              </td>
              <td>
                  <i class="material-icons md-payment font-xxl text-muted mr-5"></i>
                  ${order.paymentMethod}
              </td>
              <td>
                  <a href="/admin/order-details?orderObjectId=${order._id}" class="btn btn-xs">View details</a>
              </td>
          `;
          tbody.appendChild(row);
      });
  }

  // Filter Orders by Date Range
  document.getElementById('filterDateRange').addEventListener('click', function () {
      const startDate = new Date(document.getElementById('startDate').value);
      const endDate = new Date(document.getElementById('endDate').value);
      const filteredOrders = orders.filter(order => {
          const orderDate = new Date(order.orderDate);
          return orderDate >= startDate && orderDate <= endDate;
      });
      renderOrders(filteredOrders);
  });

  // Generate PDF Report
  document.getElementById('createReport').addEventListener('click', function (event) {
      event.preventDefault();
      const { jsPDF } = window.jspdf;
      const doc = new jsPDF();

      // Check if autoTable is available
      if (typeof doc.autoTable === 'function') {
          const table = document.querySelector('table');
          const headers = Array.from(table.querySelectorAll('thead th')).map(th => th.textContent);
          const rows = Array.from(table.querySelectorAll('tbody tr')).map(row => {
              const cells = Array.from(row.querySelectorAll('td')).map(cell => cell.textContent);
              return cells.slice(0, -1); // Exclude last column (Actions)
          });

          // Remove the "Actions" header from the headers array
          const headersWithoutActions = headers.slice(0, -1);

          // Define column widths (adjust as needed)
          const columnWidths = [20, 22, 40, 20, 40, 40]; // Example widths for each column

          // Add header and data to the PDF
          doc.autoTable({
              head: [headersWithoutActions],
              body: rows,
              startY: 20,
              margin: { top: 10 },
              columnStyles: {
                  0: { cellWidth: columnWidths[0] },
                  1: { cellWidth: columnWidths[1] },
                  2: { cellWidth: columnWidths[2] },
                  3: { cellWidth: columnWidths[3] }, // Details column
                  4: { cellWidth: columnWidths[4] }, // Details column
                  5: { cellWidth: columnWidths[5] }  // Details column
              },
              styles: {
                  cellPadding: 2,  // Adjust cell padding
                  fontSize: 10,    // Adjust font size
                  halign: 'center', // Center-align cell content
                  valign: 'middle'  // Vertical alignment of cell content
              },
              headStyles: {
                  fillColor: [22, 160, 133], // Header background color
                  textColor: [255, 255, 255], // Header text color
                  fontStyle: 'bold', // Header text style
              },
              didDrawPage: function (data) {
                  doc.text('Order Report', 14, 15);
              }
          });

          doc.save('orders_report.pdf');
      } else {
          console.error('autoTable is not available. Make sure jsPDF and jsPDF AutoTable are properly included.');
      }
  });
</script>

  </body>
</html>
